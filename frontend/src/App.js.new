import React, { useEffect } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { CssBaseline } from '@mui/material';
import { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useTheme } from './contexts/ThemeContext';
import { useAuth } from './contexts/AuthContext';
import useAuthPersistence from './hooks/useAuthPersistence';

// Layouts
import Layout from './components/layout/Layout';
import RouteTransition from './components/layout/RouteTransition';
import AdminLayout from './components/layout/AdminLayout';

// Pages
import HomePage from './pages/HomePage';
import ShopPage from './pages/ShopPage';
import ProductPage from './pages/ProductPage';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import CartPage from './pages/CartPage';
import CheckoutPage from './pages/CheckoutPage';
import DashboardPage from './pages/DashboardPage';
import PurchasesPage from './pages/PurchasesPage';
import ReceiptsPage from './pages/ReceiptsPage';
import NotFoundPage from './pages/NotFoundPage';

// Policy & Legal Pages
import PrivacyPolicyPage from './pages/PrivacyPolicyPage';
import TermsOfServicePage from './pages/TermsOfServicePage';
import ShippingPolicyPage from './pages/ShippingPolicyPage';
import RefundPolicyPage from './pages/RefundPolicyPage';
import CookiePolicyPage from './pages/CookiePolicyPage';
import GDPRCompliancePage from './pages/GDPRCompliancePage';
import CCPACompliancePage from './pages/CCPACompliancePage';
import AccessibilityPage from './pages/AccessibilityPage';
import DisclaimerPage from './pages/DisclaimerPage';

// Admin Pages
import AdminDashboardPage from './pages/admin/AdminDashboardPage';
import AdminProductsPage from './pages/admin/AdminProductsPage';
import AdminAddProductPage from './pages/admin/AdminAddProductPage';
import AdminEditProductPage from './pages/admin/AdminEditProductPage';
import AdminCategoriesPage from './pages/admin/AdminCategoriesPage';
import AdminUsersPage from './pages/admin/AdminUsersPage';
import AdminTransactionsPage from './pages/admin/AdminTransactionsPage';
import AdminSettingsPage from './pages/admin/AdminSettingsPage';
import AdminPaymentSettingsPage from './pages/AdminPaymentSettingsPage';

// Protected Route Component with enhanced persistence
const ProtectedRoute = ({ children, admin = false }) => {
  const { isAuthenticated, user, loading } = useAuth();
  
  // Show loading animation while checking authentication
  if (loading) {
    return null; // Will be handled by RouteTransition
  }
  
  // Redirect to login if not authenticated
  if (!isAuthenticated) {
    return <Navigate to="/login" />;
  }
  
  // Check admin permission after confirming authentication
  if (!loading && isAuthenticated && admin && user.role !== 'admin') {
    return <Navigate to="/" />;
  }
  
  return children;
};

function App() {
  const { theme, mode } = useTheme();
  const { isAuthenticated } = useAuth();
  
  // Use our custom authentication persistence hook
  useAuthPersistence();
  
  // Log authentication status on load/refresh
  useEffect(() => {
    console.log('App rendered, authentication status:', isAuthenticated ? 'Authenticated' : 'Not authenticated');
  }, [isAuthenticated]);

  return (
    <MuiThemeProvider theme={theme}>
      <CssBaseline />
      <ToastContainer
        position="top-right"
        autoClose={3000}
        hideProgressBar={false}
        newestOnTop
        closeOnClick
        rtl={false}
        pauseOnHover
        theme={mode}
      />
      <RouteTransition>
        <Routes>
          {/* Public Routes */}
          <Route path="/" element={<Layout />}>
            <Route index element={<HomePage />} />
            <Route path="shop" element={<ShopPage />} />
            <Route path="product/:slug" element={<ProductPage />} />
            <Route path="login" element={<LoginPage />} />
            <Route path="register" element={<RegisterPage />} />
            
            {/* Legal & Policy Pages */}
            <Route path="privacy-policy" element={<PrivacyPolicyPage />} />
            <Route path="terms-of-service" element={<TermsOfServicePage />} />
            <Route path="shipping-policy" element={<ShippingPolicyPage />} />
            <Route path="refund-policy" element={<RefundPolicyPage />} />
            <Route path="cookie-policy" element={<CookiePolicyPage />} />
            <Route path="gdpr-compliance" element={<GDPRCompliancePage />} />
            <Route path="ccpa-compliance" element={<CCPACompliancePage />} />
            <Route path="accessibility" element={<AccessibilityPage />} />
            <Route path="disclaimer" element={<DisclaimerPage />} />
            
            {/* Protected User Routes */}
            <Route path="cart" element={
              <ProtectedRoute>
                <CartPage />
              </ProtectedRoute>
            } />
            <Route path="checkout" element={
              <ProtectedRoute>
                <CheckoutPage />
              </ProtectedRoute>
            } />
            <Route path="dashboard" element={
              <ProtectedRoute>
                <DashboardPage />
              </ProtectedRoute>
            } />
            <Route path="purchases" element={
              <ProtectedRoute>
                <PurchasesPage />
              </ProtectedRoute>
            } />
            <Route path="receipts" element={
              <ProtectedRoute>
                <ReceiptsPage />
              </ProtectedRoute>
            } />
            
            {/* 404 Page */}
            <Route path="*" element={<NotFoundPage />} />
          </Route>
          
          {/* Admin Routes */}
          <Route path="/admin" element={
            <ProtectedRoute admin={true}>
              <AdminLayout />
            </ProtectedRoute>
          }>
            <Route index element={<AdminDashboardPage />} />
            <Route path="products" element={<AdminProductsPage />} />
            <Route path="products/add" element={<AdminAddProductPage />} />
            <Route path="products/edit/:id" element={<AdminEditProductPage />} />
            <Route path="categories" element={<AdminCategoriesPage />} />
            <Route path="users" element={<AdminUsersPage />} />
            <Route path="transactions" element={<AdminTransactionsPage />} />
            <Route path="settings" element={<AdminSettingsPage />} />
            <Route path="payment-settings" element={<AdminPaymentSettingsPage />} />
          </Route>
        </Routes>
      </RouteTransition>
    </MuiThemeProvider>
  );
}

export default App;
